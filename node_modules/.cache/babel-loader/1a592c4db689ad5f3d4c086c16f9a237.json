{"ast":null,"code":"var _jsxFileName = \"/Users/andrewkim/GA/mygamelist/mygamelist_frontend/src/components/Register.jsx\";\nimport React, { Component } from 'react';\nimport RegisterForm from './shared/RegisterForm';\nimport signInUser from './services/auth';\nimport axios from 'axios';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value,\n        error: false,\n        errorMsg: \"\"\n      });\n    };\n\n    this.signUp = async credentials => {\n      console.log('this is for the signUp!!!!!!!', credentials);\n\n      try {\n        const resp = await axios.post('http://localhost:3000/users/register', credentials);\n        localStorage.setItem('token', resp.data.token);\n        return resp.data;\n      } catch (error) {\n        throw error;\n      }\n    };\n\n    this.onSignUp = event => {\n      event.preventDefault();\n      const _this$props = this.props,\n            history = _this$props.history,\n            setUser = _this$props.setUser;\n      signUp(this.state).then(() => signInUser(this.state)).then(res => setUser(res.user)).then(() => history.push(\"/\")).catch(error => {\n        console.error(error);\n        this.setState({\n          username: \"\",\n          password: \"\",\n          error: true,\n          errorMsg: \"SignUp Failed\"\n        });\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      error: false,\n      errorMsg: ''\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n    return React.createElement(RegisterForm, {\n      username: username,\n      password: password,\n      onChange: this.handleChange,\n      onSubmit: this.onSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/andrewkim/GA/mygamelist/mygamelist_frontend/src/components/Register.jsx"],"names":["React","Component","RegisterForm","signInUser","axios","Register","constructor","props","handleChange","event","setState","target","name","value","error","errorMsg","signUp","credentials","console","log","resp","post","localStorage","setItem","data","token","onSignUp","preventDefault","history","setUser","state","then","res","user","push","catch","username","password","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AASA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,YAbmB,GAaJC,KAAK,IAAI;AACpB,WAAKC,QAAL,CAAc;AACV,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE,KADxB;AAEVC,QAAAA,KAAK,EAAE,KAFG;AAGVC,QAAAA,QAAQ,EAAE;AAHA,OAAd;AAKH,KAnBkB;;AAAA,SAoBnBC,MApBmB,GAoBV,MAAMC,WAAN,IAAqB;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,WAA7C;;AACF,UAAI;AACF,cAAMG,IAAI,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,sCAAX,EAAmDJ,WAAnD,CAAnB;AACAK,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,IAAL,CAAUC,KAAxC;AACA,eAAOL,IAAI,CAACI,IAAZ;AACD,OAJD,CAIE,OAAOV,KAAP,EAAc;AACd,cAAMA,KAAN;AACD;AACF,KA7BkB;;AAAA,SAmCnBY,QAnCmB,GAmCRjB,KAAK,IAAI;AAChBA,MAAAA,KAAK,CAACkB,cAAN;AADgB,0BAGa,KAAKpB,KAHlB;AAAA,YAGRqB,OAHQ,eAGRA,OAHQ;AAAA,YAGCC,OAHD,eAGCA,OAHD;AAKhBb,MAAAA,MAAM,CAAC,KAAKc,KAAN,CAAN,CACGC,IADH,CACQ,MAAM5B,UAAU,CAAC,KAAK2B,KAAN,CADxB,EAEGC,IAFH,CAEQC,GAAG,IAAIH,OAAO,CAACG,GAAG,CAACC,IAAL,CAFtB,EAGGF,IAHH,CAGQ,MAAMH,OAAO,CAACM,IAAR,CAAa,GAAb,CAHd,EAIGC,KAJH,CAISrB,KAAK,IAAI;AACdI,QAAAA,OAAO,CAACJ,KAAR,CAAcA,KAAd;AACA,aAAKJ,QAAL,CAAc;AACZ0B,UAAAA,QAAQ,EAAE,EADE;AAEZC,UAAAA,QAAQ,EAAE,EAFE;AAGZvB,UAAAA,KAAK,EAAE,IAHK;AAIZC,UAAAA,QAAQ,EAAE;AAJE,SAAd;AAMD,OAZH;AAaD,KArDgB;;AAIf,SAAKe,KAAL,GAAa;AACTM,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTvB,MAAAA,KAAK,EAAE,KAHE;AAITC,MAAAA,QAAQ,EAAE;AAJD,KAAb;AAQH;;AAgDDuB,EAAAA,MAAM,GAAG;AAAA,wBAE0B,KAAKR,KAF/B;AAAA,UAEGM,QAFH,eAEGA,QAFH;AAAA,UAEaC,QAFb,eAEaA,QAFb;AAGL,WACI,oBAAC,YAAD;AACI,MAAA,QAAQ,EAAED,QADd;AAEI,MAAA,QAAQ,EAAEC,QAFd;AAGI,MAAA,QAAQ,EAAE,KAAK7B,YAHnB;AAII,MAAA,QAAQ,EAAE,KAAKkB,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH;;AA1E4B;;AA6EjC,eAAerB,QAAf","sourcesContent":["import React, {Component} from 'react'\nimport RegisterForm from './shared/RegisterForm'\nimport signInUser from './services/auth'\nimport axios from 'axios'\n\n\n\n\n\n\n\n\nclass Register extends Component {\n    constructor(props) {\n        super(props)\n\n\n        this.state = {\n            username: '',\n            password: '',\n            error: false,\n            errorMsg: ''\n        };\n\n\n    }\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            error: false,\n            errorMsg: \"\"\n        });\n    };\n    signUp = async credentials => {\n        console.log('this is for the signUp!!!!!!!', credentials)\n      try {\n        const resp = await axios.post('http://localhost:3000/users/register', credentials)\n        localStorage.setItem('token', resp.data.token)\n        return resp.data\n      } catch (error) {\n        throw error\n      }\n    }\n\n\n\n\n\n    onSignUp = event => {\n        event.preventDefault();\n    \n        const { history, setUser } = this.props;\n    \n        signUp(this.state)\n          .then(() => signInUser(this.state))\n          .then(res => setUser(res.user))\n          .then(() => history.push(\"/\"))\n          .catch(error => {\n            console.error(error);\n            this.setState({\n              username: \"\",\n              password: \"\",\n              error: true,\n              errorMsg: \"SignUp Failed\"\n            });\n          });\n      };\n\n\n\n\n\n\n    render() {\n\n        const { username, password } = this.state;\n        return (\n            <RegisterForm \n                username={username}\n                password={password}\n                onChange={this.handleChange}\n                onSubmit={this.onSignUp}\n                \n            />\n\n        )\n    }\n}\n\nexport default Register  "]},"metadata":{},"sourceType":"module"}